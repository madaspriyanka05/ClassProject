package  com.lti.dao;

import java.time.LocalDate;
import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;

import com.lti.model.*;

public class AccountDao extends GenericDao 
{
	
	//SQL--> select * from tbl_acc where acc_type='saving';
	//JPQL or HQL-->select a from Account a where acctype=':tp';
	public List<Account> fetchByType(String type)
	{
		
		EntityManagerFactory emf = Persistence.createEntityManagerFactory("oracletest");
		EntityManager em = emf.createEntityManager();
		
		Query q=em.createQuery("Select a from Account a where a.acctype=:tp");
		q.setParameter("tp", type);
		List <Account> accounts=q.getResultList();
		
		em.close();
		emf.close();
		return accounts;
	 }
	
	public List<Transcation> fetchMiniStatement(int accno)
	{
		
		EntityManagerFactory emf = Persistence.createEntityManagerFactory("oracletest");
		EntityManager em = emf.createEntityManager();
		
		
		//SQL--> select * from tbl_acc_tran
		//			where rownnum<6
		//			and accno=1001
     	//			order by d desc;
		
		
		//JPQL--> Select t from TBL_ACC_TRAN  
		//			t where t.Account.accNo=1002 
		//			order by t.d desc;
		Query q=em.createQuery("Select t from Transcation  t where t.acct.accNo=:accno order by t.d desc");
		q.setParameter("accno", accno);
		q.setMaxResults(5);
		List <Transcation> transcations=q.getResultList();
		
		em.close();
		emf.close();
		return transcations;
	 }

	
	public List<Transcation> fetchListOfTranscations(int accno,LocalDate date)
	{
		
		EntityManagerFactory emf = Persistence.createEntityManagerFactory("oracletest");
		EntityManager em = emf.createEntityManager();
		
		
		//SQL--> select * from TBL_ACC_TRAN
		//where to_date(to_char(dateandtime,'dd-mm-yy'),'dd-mm-yy')=to_date('11-11-2019','dd-mm-yyyy') and ACC_NO=1004;
		
		//JPQL--> Select t from TBL_ACC_TRAN  
		//			t where t.Account.accNo=1002 
		//			order by t.d desc;
		Query q=em.createQuery("Select t from Transcation  t where t.acct.accNo=:accno  and t.dateandtime=:date");
		q.setParameter("accno", accno);
		q.setMaxResults(5);
		List <Transcation> transcations=q.getResultList();
		
		em.close();
		emf.close();
		return transcations;
	 }
}
